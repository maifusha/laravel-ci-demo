stages:
  - verify
  - deploy


before_script:
  - eval $(ssh-agent -s) && echo -n "$id_rsa"|ssh-add -


phpcs:
  image: git.yoursite.com:5005/docker/php-fpm:latest
  stage: verify
  except:
    - triggers
  script:
    - composer install --dev --quiet --prefer-dist --optimize-autoloader
    - ./vendor/bin/phpcs --standard=phpcs.xml

phpmd:
  image: git.yoursite.com:5005/docker/php-fpm:latest
  stage: verify
  except:
    - triggers
  script:
    - composer install --dev --quiet --prefer-dist --optimize-autoloader
    - ./vendor/bin/phpmd app,tests text resources/rulesets/cleancode.xml,resources/rulesets/codesize.xml,resources/rulesets/controversial.xml,resources/rulesets/design.xml,resources/rulesets/naming.xml,resources/rulesets/unusedcode.xml

phpunit:
  image: git.yoursite.com:5005/docker/php-fpm:latest
  stage: verify
  except:
    - triggers
  script:
    - composer install --dev --quiet --prefer-dist --optimize-autoloader
    - ./vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never


deploy_test:
  image: git.yoursite.com:5005/docker/docker:latest
  stage: deploy
  environment:
    name: test
    url: http://test.yoursite.com
  only:
    - test
  when: manual
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:test .
    - docker push $CI_REGISTRY_IMAGE:test
    - ssh -o "StrictHostKeyChecking no" test机账号@test机ip
      "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY};
      docker service update \
            --update-parallelism 2 \
            --update-delay 1ms \
            --with-registry-auth \
            --image $CI_REGISTRY_IMAGE:test \
            服务名称 \
      "

deploy_staging:
  image: git.yoursite.com:5005/docker/docker:latest
  stage: deploy
  environment:
    name: staging
    url: http://staging.yoursite.com
  only:
    - staging
  when: manual
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:staging .
    - docker push $CI_REGISTRY_IMAGE:staging
    - ssh -o "StrictHostKeyChecking no" staging机账号@staging机ip
      "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY};
      docker service update \
            --update-parallelism 2 \
            --update-delay 1ms \
            --with-registry-auth \
            --image $CI_REGISTRY_IMAGE:staging \
            服务名称 \
      "

deploy_production:
  image: git.yoursite.com:5005/docker/docker:latest
  stage: deploy
  environment:
    name: production
    url: http://www.yoursite.com
  only:
    - triggers
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF .
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - ssh -o "StrictHostKeyChecking no" production机账号@production机ip
      "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY};
      docker service update \
            --update-parallelism 2 \
            --update-delay 1ms \
            --with-registry-auth \
            --image $CI_REGISTRY_IMAGE:latest \
            服务名称 \
      "
