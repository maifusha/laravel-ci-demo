stages:
  - verify
  - build
  - release
  - deploy


phpcs:
  image: git.maifusha.com:5005/docker/php-fpm:latest
  stage: verify
  except:
    - triggers
  script:
    - composer install --dev --quiet --prefer-dist --optimize-autoloader
    - ./vendor/bin/phpcs --standard=phpcs.xml

phpmd:
  image: git.maifusha.com:5005/docker/php-fpm:latest
  stage: verify
  except:
    - triggers
  script:
    - composer install --dev --quiet --prefer-dist --optimize-autoloader
    - ./vendor/bin/phpmd app,tests text resources/rulesets/cleancode.xml,resources/rulesets/codesize.xml,resources/rulesets/controversial.xml,resources/rulesets/design.xml,resources/rulesets/naming.xml,resources/rulesets/unusedcode.xml

phpunit:
  image: git.maifusha.com:5005/docker/php-fpm:latest
  stage: verify
  except:
    - triggers
  script:
    - composer install --dev --quiet --prefer-dist --optimize-autoloader
    - ./vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never


build_branch:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: build
  except:
    - test
    - staging
    - master
    - triggers
  script:
    - BRANCH_TAG=`echo $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME | sed -r 's#/((\w|\-)+)$#:\1#'`
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $BRANCH_TAG .
    - docker push $BRANCH_TAG

build_test:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: build
  only:
    - test
  variables:
    TAG: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_SHA
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $TAG .
    - docker push $TAG

build_staging:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: build
  only:
    - staging
  variables:
    TAG: $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHA
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $TAG .
    - docker push $TAG

build_master:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: build
  only:
    - master
  variables:
    TAG: $CI_REGISTRY_IMAGE/master:$CI_COMMIT_SHA
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $TAG .
    - docker push $TAG


release_production:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: release
  only:
    - master
  variables:
    CURRENT_TAG: $CI_REGISTRY_IMAGE/master:$CI_COMMIT_SHA
    RELEASE_TAG: $CI_REGISTRY_IMAGE
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CURRENT_TAG
    - docker tag $CURRENT_TAG $RELEASE_TAG
    - docker push $RELEASE_TAG


deploy_branch:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: deploy
  variables:
    GIT_STRATEGY: none
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://$CI_COMMIT_REF_SLUG.maifusha.com
    on_stop: offline_branch
  except:
    - test
    - staging
    - master
    - triggers
  script:
    - BRANCH_TAG=`echo $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME | sed -r 's#/((\w|\-)+)$#:\1#'`
offline_branch:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: deploy
  variables:
    GIT_STRATEGY: none
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  when: manual
  script:
    - echo '脚本：下线分支环境+删除分支镜像'

deploy_test:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: deploy
  variables:
    GIT_STRATEGY: none
    IMAGE_NAME: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_SHA
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://test.maifusha.com
  only:
    - test
  script:
    - echo 'test环境部署'

deploy_staging:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: deploy
  variables:
    GIT_STRATEGY: none
    IMAGE_NAME: $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHA
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://staging.maifusha.com
  only:
    - master
  script:
    - echo 'staging环境部署'

deploy_production:
  image: git.maifusha.com:5005/docker/docker:latest
  stage: deploy
  variables:
    GIT_STRATEGY: none
    IMAGE_NAME: $CI_REGISTRY_IMAGE
  environment:
    name: production
    url: http://www.maifusha.com
  only:
    - master
    - triggers
  when: manual
  script:
    - eval $(ssh-agent -s) && echo -n "$id_rsa"|ssh-add -
    - ssh -o "StrictHostKeyChecking no" root@$node1
      "
        docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY};
        docker service update \
                --update-parallelism 2 \
                --update-delay 1ms \
                --with-registry-auth \
                --image 镜像名称 \
                服务名称 \
      "
